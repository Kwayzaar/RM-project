{"version":3,"sources":["img/RM-logo.png","components/Title.js","menu/NavBar.js","components/Header.js","components/characters/CharacterCard.js","components/characters/Buttons.js","components/characters/CharacterList.js","locations/LocationList.js","App.js","index.js"],"names":["Title","className","src","rmLogo","NavBar","useState","navbarOpen","setNavbarOpen","navLine","onClick","alt","Header","CharacterCard","character","name","image","Buttons","characters","pageNumber","setPageNumber","pageSize","totalPages","Math","ceil","length","Provider","value","type","setTimeout","CharacterList","array","arrayStart","arrayEnd","slice","paginate","map","id","LocationList","App","setCharacters","parse","response","json","paginatedFetch","characterURL","page","previousResponse","fetch","then","newResponse","console","log","results","info","next","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d59c14cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/RM-logo.93c0c4c5.png\";","import React from \"react\"\nimport rmLogo from \"../img/RM-logo.png\"\n\nexport default function Title() {\n  return (\n    <div className=\"sm:flex backdrop-filter backdrop-blur shadow-lg\">\n      <img src={rmLogo} className=\"m-auto sm:\"/>\n\n    </div>\n  )\n}","import React, { useState } from 'react'\n\nfunction NavBar() {\n  const [navbarOpen, setNavbarOpen] = useState(false)\n\n  //styles\n  const navbarButton = \"flex flex-col h-12 w-12 border-2 border-black justify-center items-center group cursor-pointer\" \n\n  const navLine = \"h-1 w-6 my-1 bg-black rounded-full transition ease transform duration-300\"\n\n  const handleToggle = () => {\n    setNavbarOpen(!navbarOpen)\n  }\n\n  return (\n    \n      <button onClick={handleToggle} className={navbarButton} alt=\"menu-button\">\n        <div className={`${navLine} ${\n          navbarOpen \n          ? \"rotate-45 translate-y-3 opacity-50 group-hover:opacity-100\" \n          : \"opacity-100 group-hover:opacity-50\"}`} />\n        <div className={`${navLine} ${\n          navbarOpen \n          ? \"opacity-0\" \n          : \"opacity-100 group-hover:opacity-50\"}`} />\n        <div className={`${navLine} ${\n        navbarOpen \n        ? \"-rotate-45 -translate-y-3 opacity-50 group-hover:opacity-100\" \n        : \"opacity-100 group-hover:opacity-50\"}`} />\n      </button>\n    \n  )\n}\n\nexport default NavBar","import React from 'react'\nimport NavBar from '../menu/NavBar'\n\nfunction Header() {\n  return (\n    <div className=\"sticky top-0 bg-white\">\n      <header className=\"w-full h-10 mb-32 mt-4 text-black\">\n        <NavBar />\n      </header>\n    </div>\n  )\n}\n\nexport default Header;\n\n\n\n","\nfunction CharacterCard({ character }) {\n  return (\n  <li className=\"flex flex-col items-center m-2\" alt=\"character-icons\">\n    <h2 className=\"flex items-center text-center h-full\" alt={character.name}>{ character.name }</h2>\n  <img src={ character.image } className=\"w-28 sm:w-28 sm:h-28 rounded-lg shadow-lg h-28\" alt={character.name + \" image\"}/>\n  </li>\n  )}\n\nexport default CharacterCard; ","import React from 'react'\nimport { IconContext } from 'react-icons'\nimport { FiChevronLeft, FiChevronRight, FiChevronsLeft, FiChevronsRight } from \"react-icons/fi\"\n\nfunction Buttons({ characters, pageNumber, setPageNumber, pageSize }) {\n\n  let totalPages = Math.ceil(characters.length / pageSize)\n\n  const nextPage = () => {\n    // this ternary prevents the increment counter from going above 1 when paginating forward\n    setTimeout(() => {\n      return pageNumber === totalPages - 1 ?\n        pageNumber :\n        setPageNumber(pageNumber + 1)\n      }, 200)\n  }\n\n  const prevPage = () => {\n    // This ternary prevents the decrement counter from going below 0 when paginating backward\n    setTimeout(() => {\n      return pageNumber === 0 ?\n      pageNumber :\n      setPageNumber(pageNumber - 1)\n    }, 200)\n  }\n\n  const jumpToLast = () => {\n    return pageNumber === totalPages ?\n    pageNumber :\n    setPageNumber(totalPages - 1) \n  }\n\n  const jumpToFirst = () => {\n    return pageNumber === 0 ?\n    pageNumber :\n    setPageNumber(0)\n  }\n\n  return (\n    // IconContext styling in app.css\n    <IconContext.Provider value={{ className: \"cl-icons\" }} >\n      <div className=\"order-2 flex flex-row items-center justify-center m-1 mt- space-x-4\">\n          <button type=\"button\" className=\"border rounded-md shadow bg-blue-500 hover:bg-blue-400 active:bg-blue-400 text-white p-1\" onClick={jumpToFirst}><FiChevronsLeft /></button>\n          <button type=\"button\" className=\"border rounded-md shadow bg-blue-500 hover:bg-blue-400 active:bg-blue-400 text-white p-1\" onClick={prevPage} ><FiChevronLeft /></button> \n          <button type=\"button\" className=\"border rounded-md shadow bg-blue-500 hover:bg-blue-400 active:bg-blue-400 text-white p-1\" onClick={nextPage} ><FiChevronRight /></button> \n          <button type=\"button\" className=\"border rounded-md shadow bg-blue-500 hover:bg-blue-400 active:bg-blue-400 text-white p-1\" onClick={jumpToLast}><FiChevronsRight /></button>\n        </div>\n    </IconContext.Provider>\n  )\n}\n\nexport default Buttons","import React, { useState } from 'react'\nimport CharacterCard from './CharacterCard'\nimport Buttons from './Buttons'\n\nfunction CharacterList({ characters }) {\n  const [pageNumber, setPageNumber] = useState(0)\n  const [pageSize, setPageSize] = useState(6)\n\n  // allows user to paginate 6 at a time through array of characters\n  function paginate(array, pageSize, pageNumber) {\n    const arrayStart = pageNumber * pageSize\n    const arrayEnd = pageNumber * pageSize + pageSize\n    return characters.slice(arrayStart, arrayEnd)\n  }\n\n  // renders 6 characters as cards, at page open first 6 characters\n  const createCard = () => paginate(characters, pageSize, pageNumber).map(character => { \n    return (\n      <CharacterCard character={ character } key={ character.id } />\n    )\n  })\n\n  return (\n    <div className=\"flex-col min-w-full min-h-full overflow-hidden p-1.5 mb-10 bg-blue-100 shadow-lg overflow-hidden\">\n      <div className=\"background-none\">\n        <ul className=\"grid grid-cols-2 order-1 sm:grid-cols-3 sm:px-28 md:px-44 lg:px-60 xl:px-96\">      \n          {createCard()}\n        </ul>\n        <Buttons \n          characters={ characters }\n          pageNumber={ pageNumber}  \n          setPageNumber={ setPageNumber } \n          pageSize={ pageSize }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterList;","import react, { useState } from 'react'\n\nfunction LocationList() {\n  return (\n    <div className=\"flex-col min-w-screen min-h-full p-1.5 mt-10 bg-blue-100 shadow-lg overflow-hidden\">\n      <ul>\n        <li>location</li>\n        <li>location</li>\n        <li>location</li>\n        <li>location</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default LocationList ","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Title from './components/Title'\nimport Header from './components/Header'\nimport CharacterList from './components/characters/CharacterList'\nimport LocationList from './locations/LocationList'\n\nfunction App() {\n  const [characters, setCharacters] = useState([])\n  \n  const parse = response => response.json()\n  \n  function paginatedFetch(\n    characterURL = `https://rickandmortyapi.com/api/character/`,\n    page = 1,\n    previousResponse = []\n  ) {\n      return fetch(`${characterURL}?page=${page}`)\n        .then(parse)\n        .then(newResponse => {\n          console.log(newResponse)\n          const response = [...previousResponse, ...newResponse.results]\n          \n          if (newResponse.info.next !== `${characterURL}?page=4`) {\n            page++\n            \n            return paginatedFetch(characterURL, page, response)\n          }\n          return setCharacters(response)\n          \n        })\n      }\n\n  //Use Effect to make the fetch\n  useEffect(() => {\n    paginatedFetch()\n  }, [])\n\n  return (\n    <div className=\"h-screen w-screen flex-col\">\n      <div className=\"h-screen w-screen bg-black bg-center bg-cover bg-fixed 2xl:pt-24 pt-4 \">\n        <Title />\n        <Header />\n        <CharacterList characters={ characters } />\n        <LocationList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}