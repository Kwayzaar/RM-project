{"version":3,"sources":["img/RM-logo.png","components/Title.js","components/Header.js","components/characters/CharacterCard.js","components/characters/CharacterList.js","components/Locations.js","App.js","index.js"],"names":["Title","className","src","rmLogo","Header","CharacterCard","character","name","image","CharacterList","characters","useState","pageNumber","setPageNumber","pageSize","totalPages","Math","ceil","length","array","arrayStart","arrayEnd","slice","paginate","map","id","type","onClick","setTimeout","Locations","App","setCharacters","parse","response","json","paginatedFetch","characterURL","page","previousResponse","fetch","then","newResponse","results","info","next","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,G,MAAA,IAA0B,qC,OCG1B,SAASA,IACtB,OACE,qBAAKC,UAAU,kDAAf,SACE,qBAAKC,IAAKC,EAAQF,UAAU,iBCUnBG,MAdf,WACE,OACE,qBAAKH,UAAU,eAAf,SACE,wBAAQA,UAAU,oCAAlB,SACE,8BACE,6BACE,yDCCGI,MARf,YAAuC,IAAdC,EAAa,EAAbA,UACvB,OACA,qBAAIL,UAAU,iCAAd,UACE,oBAAIA,UAAU,oCAAd,SAAoDK,EAAUC,OAC9D,qBAAKL,IAAMI,EAAUE,MAAQP,UAAU,+CC+D5BQ,MAjEf,YAAwC,IAAfC,EAAc,EAAdA,WAAc,EACDC,mBAAS,GADR,mBAC9BC,EAD8B,KAClBC,EADkB,OAELF,mBAAS,GAFJ,mBAE9BG,EAF8B,KAIjCC,GAJiC,KAIpBC,KAAKC,KAAKP,EAAWQ,OAASJ,IA8C/C,OACE,sBAAKb,UAAU,sEAAf,UACE,oBAAIA,UAAU,4BAAd,SA7CJ,SAAkBkB,EAAOL,EAAUF,GACjC,IAAMQ,EAAaR,EAAaE,EAC1BO,EAAWT,EAAaE,EAAWA,EACzC,OAAOJ,EAAWY,MAAMF,EAAYC,GAIbE,CAASb,EAAYI,EAAUF,GAAYY,KAAI,SAAAlB,GACtE,OACE,cAAC,EAAD,CAAeA,UAAYA,GAAkBA,EAAUmB,SAuCvD,sBAAKxB,UAAU,kEAAf,UACE,wBAAQyB,KAAK,SAASC,QA3BT,WAEfC,YAAW,WACT,OAAsB,IAAfhB,EACPA,EACAC,EAAcD,EAAa,KAC1B,MAqBwCX,UAAU,4BAAnD,kBACA,wBAAQyB,KAAK,SAASC,QAbN,WAClB,OAAsB,IAAff,EACPA,EACAC,EAAc,IAUZ,mBACA,wBAAQa,KAAK,SAASC,QApBP,WACjB,OAAOf,IAAeG,EACtBH,EACAC,EAAcE,EAAa,IAiBzB,kBACA,wBAAQW,KAAK,SAASC,QAvCT,WAEfC,YAAW,WACT,OAAOhB,IAAeG,EAAa,EACjCH,EACAC,EAAcD,EAAa,KAC1B,MAiCsCX,UAAU,4BAAnD,yBC5DO,SAAS4B,IACtB,OACE,qBAAK5B,UAAU,UC+CJ6B,MA5Cf,WAAgB,IAAD,EACuBnB,mBAAS,IADhC,mBACND,EADM,KACMqB,EADN,KAGPC,EAAQ,SAAAC,GAAQ,OAAIA,EAASC,QAEnC,SAASC,IAIN,IAHDC,EAGA,oGAFAC,EAEA,uDAFO,EACPC,EACA,uDADmB,GAEjB,OAAOC,MAAM,GAAD,OAAIH,EAAJ,iBAAyBC,IAClCG,KAAKR,GACLQ,MAAK,SAAAC,GAEJ,IAAMR,EAAQ,sBAAOK,GAAP,YAA4BG,EAAYC,UAEtD,OAA8B,OAA1BD,EAAYE,KAAKC,MACnBP,IAEOF,EAAeC,EAAcC,EAAMJ,IAGrCF,EAAcE,MAU7B,OAJAY,qBAAU,WACRV,MACC,IAGD,qBAAKlC,UAAU,6BAAf,SACE,sBAAKA,UAAU,iGAAf,UACE,cAACD,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAeU,WAAaA,IAC5B,cAACmB,EAAD,UCxCRiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f41f51ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/RM-logo.93c0c4c5.png\";","import React from \"react\"\nimport rmLogo from \"../img/RM-logo.png\"\n\nexport default function Title() {\n  return (\n    <div className=\"sm:flex backdrop-filter backdrop-blur shadow-lg\">\n      <img src={rmLogo} className=\"m-auto sm:\"/>\n\n    </div>\n  )\n}","import React from 'react'\n\nfunction Header() {\n  return (\n    <div className=\"sticky top-0\">\n      <header className=\"w-full h-10 mb-32 mt-4 text-white\">\n        <nav>\n          <ul>\n            <li>Rick and Morty</li>\n          </ul>\n        </nav>\n      </header>\n    </div>\n  )\n}\n\nexport default Header;\n\n\n\n","\nfunction CharacterCard({ character }) {\n  return (\n  <li className=\"flex flex-col items-center m-2\">\n    <h2 className=\"flex items-center text-center h-8\">{ character.name }</h2>\n    <img src={ character.image } className=\"w-28 md:w-16 rounded-lg shadow-lg h-28\"></img>\n  </li>\n  )}\n\nexport default CharacterCard; ","import React, { useState } from 'react'\nimport CharacterCard from './CharacterCard'\n\nfunction CharacterList({ characters }) {\n  const [pageNumber, setPageNumber] = useState(0)\n  const [pageSize, setPageSize] = useState(6)\n\n  let totalPages = Math.ceil(characters.length / pageSize)\n\n  // allows user to paginate 6 at a time through array of characters\n  function paginate(array, pageSize, pageNumber) {\n    const arrayStart = pageNumber * pageSize\n    const arrayEnd = pageNumber * pageSize + pageSize\n    return characters.slice(arrayStart, arrayEnd)\n  }\n\n  // renders 6 characters as cards, at page open first 6 characters\n  const createCard = () => paginate(characters, pageSize, pageNumber).map(character => { \n    return (\n      <CharacterCard character={ character } key={ character.id } />\n    )\n  })\n\n    const nextPage = () => {\n      // this ternary prevents the increment counter from going above 1 when paginating forward\n      setTimeout(() => {\n        return pageNumber === totalPages - 1 ?\n          pageNumber :\n          setPageNumber(pageNumber + 1)\n        }, 200)\n    }\n\n    const prevPage = () => {\n      // This ternary prevents the decrement counter from going below 0 when paginating backward\n      setTimeout(() => {\n        return pageNumber === 0 ?\n        pageNumber :\n        setPageNumber(pageNumber - 1)\n      }, 200)\n    }\n    \n    const jumpToLast = () => {\n      return pageNumber === totalPages ?\n      pageNumber :\n      setPageNumber(totalPages - 1) \n    }\n\n    const jumpToFirst = () => {\n      return pageNumber === 0 ?\n      pageNumber :\n      setPageNumber(0)\n    }\n\n  return (\n    <div className=\"flex-col w-full min-h-full overflow-hidden p-1.5 bg-white shadow-lg\">\n      <ul className=\"grid grid-cols-2 order-1 \">      \n        {createCard()}\n      </ul>\n      <div className=\"order-2 flex flex-row items-center justify-center m-2 space-x-5\">\n        <button type=\"button\" onClick={prevPage} className=\"border-2 border-black m-1\">prev</button> \n        <button type=\"button\" onClick={jumpToFirst}>First</button>\n        <button type=\"button\" onClick={jumpToLast}>Last</button>\n        <button type=\"button\" onClick={nextPage} className=\"border-2 border-black m-1\">next</button> \n      </div>\n    </div>\n  )\n}\n\nexport default CharacterList;","import React from 'react'\n\nexport default function Locations() {\n  return (\n    <div className=\"h-1/4\">\n\n    </div>\n  )\n}\n\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Title from './components/Title'\nimport Header from './components/Header'\nimport CharacterList from './components/characters/CharacterList'\nimport Locations from './components/Locations'\n\nfunction App() {\n  const [characters, setCharacters] = useState([])\n  \n  const parse = response => response.json()\n  \n  function paginatedFetch(\n    characterURL = `https://rickandmortyapi.com/api/character/`,\n    page = 1,\n    previousResponse = []\n  ) {\n      return fetch(`${characterURL}?page=${page}`)\n        .then(parse)\n        .then(newResponse => {\n          // console.log(newResponse.results)\n          const response = [...previousResponse, ...newResponse.results]\n          \n          if (newResponse.info.next !== null) {\n            page++\n            \n            return paginatedFetch(characterURL, page, response)\n          }\n\n          return setCharacters(response)\n          \n        })\n    }\n\n  //Use Effect to make the fetch\n  useEffect(() => {\n    paginatedFetch()\n  }, [])\n\n  return (\n    <div className=\"h-screen w-screen flex-col\">\n      <div className=\"h-full w-full bg-rick-and-morty sm:bg-rm-landscape bg-center bg-cover bg-fixed 2xl:pt-24 pt-4 \">\n        <Title />\n        <Header />\n        <CharacterList characters={ characters } />\n        <Locations />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}