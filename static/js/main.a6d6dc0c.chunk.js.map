{"version":3,"sources":["img/RM-logo.png","components/Title.js","menu/NavBar.js","components/Header.js","components/characters/CharacterCard.js","components/characters/Buttons.js","components/characters/CharacterContainer.js","locations/LocationButtons.js","locations/LocationContainer.js","App.js","index.js"],"names":["Title","className","src","rmLogo","NavBar","useState","navbarOpen","setNavbarOpen","navLine","onClick","alt","Header","CharacterCard","character","name","image","Buttons","characters","pageNumber","setPageNumber","pageSize","totalPages","Math","ceil","length","Provider","value","type","setTimeout","CharacterContainer","array","arrayStart","arrayEnd","slice","paginate","map","id","LocationButtons","location","console","log","LocationContainer","locations","filteredArr","setFilteredArr","useEffect","arr","localArr","filter","index","self","findIndex","t","filterArr","url","App","setCharacters","setLocations","parse","response","json","paginatedFetch","characterURL","page","previousResponse","fetch","then","newResponse","results","info","next","locationArr","i","push","getLocations","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6d6dc0c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/RM-logo.93c0c4c5.png\";","import React from \"react\"\nimport rmLogo from \"../img/RM-logo.png\"\n\nexport default function Title() {\n  return (\n    <div className=\"sm:flex backdrop-filter backdrop-blur shadow-lg\">\n      <img src={rmLogo} className=\"m-auto sm:\"/>\n\n    </div>\n  )\n}","import React, { useState } from 'react'\n\nfunction NavBar() {\n  const [navbarOpen, setNavbarOpen] = useState(false)\n\n  //styles\n  const navbarButton = \"flex flex-col h-10 w-10 border-2 border-white justify-center items-center group cursor-pointer\" \n\n  const navLine = \"h-1 w-6 my-1 bg-black rounded-full transition ease transform duration-300\"\n\n  const handleToggle = () => {\n    setNavbarOpen(!navbarOpen)\n  }\n\n  return (\n    \n      <button onClick={handleToggle} className={navbarButton} alt=\"menu-button\">\n        <div className={`${navLine} ${\n          navbarOpen \n          ? \"rotate-45 translate-y-3 opacity-50 group-hover:opacity-100\" \n          : \"opacity-100 group-hover:opacity-50\"}`} />\n        <div className={`${navLine} ${\n          navbarOpen \n          ? \"opacity-0\" \n          : \"opacity-100 group-hover:opacity-50\"}`} />\n        <div className={`${navLine} ${\n        navbarOpen \n        ? \"-rotate-45 -translate-y-3 opacity-50 group-hover:opacity-100\" \n        : \"opacity-100 group-hover:opacity-50\"}`} />\n      </button>\n    \n  )\n}\n\nexport default NavBar","import React from 'react'\nimport NavBar from '../menu/NavBar'\n\nfunction Header() {\n  return (\n    <div className=\"sticky top-0 bg-white\">\n      <header className=\"w-full h-10 mb-32 mt-4 text-black\">\n        <NavBar />\n      </header>\n    </div>\n  )\n}\n\nexport default Header;\n\n\n\n","\nfunction CharacterCard({ character }) {\n  \n  return (\n  <li className=\"flex flex-col items-center m-2\" alt=\"character-icons\">\n    <h2 className=\"flex items-center text-center h-full\" alt={character.name}>{ character.name }</h2>\n  <img src={ character.image } className=\"w-28 sm:w-28 sm:h-28 rounded-lg shadow-lg h-28\" alt={character.name + \" image\"}/>\n  </li>\n  )}\n\nexport default CharacterCard; ","import React from 'react'\nimport { IconContext } from 'react-icons'\nimport { FiChevronLeft, FiChevronRight, FiChevronsLeft, FiChevronsRight } from \"react-icons/fi\"\n\nfunction Buttons({ characters, pageNumber, setPageNumber, pageSize }) {\n\n  let totalPages = Math.ceil(characters.length / pageSize)\n\n  const nextPage = () => {\n    // this ternary prevents the increment counter from going above 1 when paginating forward\n    setTimeout(() => {\n      return pageNumber === totalPages - 1 ?\n        pageNumber :\n        setPageNumber(pageNumber + 1)\n      }, 200)\n  }\n\n  const prevPage = () => {\n    // This ternary prevents the decrement counter from going below 0 when paginating backward\n    setTimeout(() => {\n      return pageNumber === 0 ?\n      pageNumber :\n      setPageNumber(pageNumber - 1)\n    }, 200)\n  }\n\n  const jumpToLast = () => {\n    return pageNumber === totalPages ?\n    pageNumber :\n    setPageNumber(totalPages - 1) \n  }\n\n  const jumpToFirst = () => {\n    return pageNumber === 0 ?\n    pageNumber :\n    setPageNumber(0)\n  }\n\n  return (\n    // IconContext styling in app.css\n    <IconContext.Provider value={{ className: \"cl-icons\" }} >\n      <div className=\"order-2 flex flex-row items-center justify-center m-1 mt- space-x-4\">\n          <button type=\"button\" className=\"border rounded-md shadow bg-black hover:bg-gray-900 active:bg-gray-900 text-white p-1\" onClick={jumpToFirst}><FiChevronsLeft /></button>\n          <button type=\"button\" className=\"border rounded-md shadow bg-black hover:bg-gray-900 active:bg-gray-900 text-white p-1\" onClick={prevPage} ><FiChevronLeft /></button> \n          <button type=\"button\" className=\"border rounded-md shadow bg-black hover:bg-gray-900 active:bg-gray-900 text-white p-1\" onClick={nextPage} ><FiChevronRight /></button> \n          <button type=\"button\" className=\"border rounded-md shadow bg-black hover:bg-gray-900 active:bg-gray-900 text-white p-1\" onClick={jumpToLast}><FiChevronsRight /></button>\n        </div>\n    </IconContext.Provider>\n  )\n}\n\nexport default Buttons","import React, { useState } from 'react'\nimport CharacterCard from './CharacterCard'\nimport Buttons from './Buttons'\n\nfunction CharacterContainer({ characters }) {\n  const [pageNumber, setPageNumber] = useState(0)\n  const [pageSize, setPageSize] = useState(6)\n\n  // renders 6 characters as cards, at page open first 6 characters\n  const createCard = () => paginate(characters, pageSize, pageNumber).map(character => { \n    return (\n      <CharacterCard character={ character } key={ character.id } />\n    )\n  })\n\n  // allows user to paginate 6 at a time through array of characters\n  function paginate(array, pageSize, pageNumber) {\n    const arrayStart = pageNumber * pageSize\n    const arrayEnd = pageNumber * pageSize + pageSize\n    return characters.slice(arrayStart, arrayEnd)\n  }\n  \n  return (\n    <div className=\"flex-col min-w-full min-h-full overflow-hidden p-1.5 mb-10 bg-white shadow-lg overflow-hidden\">\n      <div className=\"background-none\">\n        <ul className=\"grid grid-cols-2 order-1 sm:grid-cols-3 sm:px-28 md:px-44 lg:px-60 xl:px-96\">      \n          {createCard()}\n        </ul>\n        <Buttons \n          characters={ characters }\n          pageNumber={ pageNumber}  \n          setPageNumber={ setPageNumber } \n          pageSize={ pageSize }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterContainer;","import React, {useState} from 'react'\n\nfunction LocationButtons({ location }) {\n\n  console.log(location)\n\n  return (\n      <li className=\"flex flex-col items-center m-2 \">\n        <button className=\"border-2 border-black min-w-full h-16 max-h-16 rounded-lg leading-tight text-lg text-white bg-gray-900\">{location.name}</button>\n      </li>\n  )\n}\n\nexport default LocationButtons","import React, { useState, useEffect } from 'react'\nimport LocationButtons from './LocationButtons'\n\nfunction LocationContainer({ locations }) {\n  const [filteredArr, setFilteredArr] = useState([])\n  \n  // This function gets locations based on the characters fetched and pushes into new array. Also removes location duplicates \n  const filterArr = (arr) => {\n    let localArr = arr\n    localArr = localArr.filter((arr, index, self) => index === self.findIndex((t) => (t.name === arr.name)))\n    \n    return setFilteredArr(localArr)\n  } \n\n  useEffect(() => {\n    filterArr(locations)\n  }, [locations])\n  \n  const createLocationButtons = () => filteredArr.map((location, index) => {\n    console.log(location.name)\n    return (\n      <LocationButtons location={ location } url={ location.url } key={ index }/>\n    )\n  })\n\n\n\n  return (\n    <div className=\"flex-col min-w-full min-h-full overflow-hidden p-1.5 mb-10 bg-white shadow-lg overflow-hidden\">\n    <div>\n      <h1>Locations</h1>\n    </div>\n      <div className=\"background-none\">\n        <ul className=\"grid grid-cols-2 order-1 justify-items-stretch items-center align-items-center sm:grid-cols-3 sm:px-28 md:px-44 lg:px-60 xl:px-96\">\n        {createLocationButtons()}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default LocationContainer ","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Title from './components/Title'\nimport Header from './components/Header'\nimport CharacterContainer from './components/characters/CharacterContainer'\nimport LocationContainer from './locations/LocationContainer'\n\nfunction App() {\n  const [characters, setCharacters] = useState([])\n  const [locations, setLocations] = useState([])\n  \n  const parse = response => response.json()\n  \n\n  // fetches first 60 characters from API \n  function paginatedFetch(\n    characterURL = `https://rickandmortyapi.com/api/character/`,\n    page = 1,\n    previousResponse = []\n  ) {\n      return fetch(`${characterURL}?page=${page}`)\n        .then(parse)\n        .then(newResponse => {\n          // console.log(newResponse)\n          const response = [...previousResponse, ...newResponse.results]\n          \n          if (newResponse.info.next !== `${characterURL}?page=4`) {\n            page++\n            \n            return paginatedFetch(characterURL, page, response)\n          }\n          return setCharacters(response)\n          \n        })\n      }\n\n  // pulls location data out of character fetch \n  function getLocations(arr) {\n    let locationArr = []\n    for(let i = 0; i < arr.length; i++){\n      locationArr.push(arr[i].location)\n    }\n    return setLocations(locationArr)\n  }\n\n  //Use Effect to make the fetch\n  useEffect(() => {\n    paginatedFetch()\n  }, [])\n  \n  // use effect to make getLocations run only when character state is updated \n  useEffect(() => {\n    getLocations(characters)    \n  }, [characters])\n\n  return (\n    <div className=\"h-screen w-screen flex-col text-red-hat\">\n      <div className=\"bg-rm-background bg-center bg-cover bg-fixed 2xl:pt-24 pt-4\">\n        <Title />\n        <Header />\n        <CharacterContainer characters={ characters } />\n        <LocationContainer locations={ locations }/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}